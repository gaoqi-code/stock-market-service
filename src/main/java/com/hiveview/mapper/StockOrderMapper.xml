<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hiveview.dao.StockOrderMapperDao" >
  <resultMap id="BaseResultMap" type="com.hiveview.entity.StockOrder" >
    <id column="id" property="id"  />
    <result column="user_id" property="userId"  />
    <result column="product_id" property="productId"  />
    <result column="product_name" property="productName"  />
    <result column="buy_price" property="buyPrice" />
    <result column="sell_price" property="sellPrice"  />
    <result column="buy_amount" property="buyAmount"  />
    <result column="fee_amount" property="feeAmount"  />
    <result column="buy_going" property="buyGoing"  />
    <result column="update_time" property="updateTime"  />
    <result column="add_time" property="addTime"  />
    <result column="close_position_time" property="closePositionTime"  />
    <result column="change_quantity" property="changeQuantity"  />
    <result column="model_id" property="modelId"  />
    <result column="revenue_model_code" property="revenueModelCode"  />
    <result column="order_status" property="orderStatus"  />
    <result column="revenue_amount" property="revenueAmount" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, user_id, product_id, product_name, buy_price, sell_price, buy_amount, fee_amount, 
    buy_going, update_time, add_time, close_position_time, change_quantity, model_id,revenue_model_code,
    order_status, revenue_amount
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap"  >
    select 
    <include refid="Base_Column_List" />
    from j_stock_orders
    where id = #{id}
  </select>

  <select id="getStockOrdersByStatus" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from j_stock_orders
    where order_status = #{status}
  </select>


  <insert id="saveStockOrder" parameterType="com.hiveview.entity.StockOrder" >
    insert into j_stock_orders (
      id,
      user_id,
      product_id,
      product_name,
      buy_price,
      sell_price,
      buy_amount,
      fee_amount,
      buy_going,
      update_time,
      add_time,
      close_position_time,
      change_quantity,
      model_id,
      revenue_model_code,
      order_status,
      revenue_amount
      )
    values (
      #{id},
      #{userId},
      #{productId},
      #{productName},
      #{buyPrice},
      #{sellPrice},
      #{buyAmount},
      #{feeAmount},
      #{buyGoing},
      #{updateTime},
      #{addTime},
      #{closePositionTime},
      #{changeQuantity},
      #{modelId},
      #{revenueModelCode},
      #{orderStatus},
      #{revenueAmount}
      )
  </insert>

  <update id="updateByUserId" parameterType="com.hiveview.entity.StockOrder" >
    update j_stock_orders
    set
    <if test="product_id != null" >
      product_id = #{productId},
    </if>

    <if test="productName != null" >
      product_name = #{productName},
    </if>

    <if test="buy_price != null" >
      buy_price = #{buyPrice},
    </if>

    <if test="sell_price != null" >
      sell_price = #{sellPrice},
    </if>

    <if test="buy_amount != null" >
      buy_amount = #{buyAmount},
    </if>

    <if test="fee_amount != null" >
      fee_amount = #{feeAmount},
    </if>

    <if test="buy_going != null" >
      buy_going = #{buyGoing},
    </if>

    <if test="update_time != null" >
      update_time = #{updateTime},
    </if>
    <if test="add_time != null" >
      add_time = #{addTime},
    </if>
    <if test="close_position_time != null" >
      close_position_time = #{closePositionTime},
    </if>

    <if test="change_quantity != null" >
      change_quantity = #{changeQuantity},
    </if>

    <if test="revenue_model_code != null" >
      revenue_model_code = #{revenueModelCode},
    </if>
    <if test="order_status != null" >
      order_status = #{orderStatus},
    </if>
    <if test="revenue_amount != null" >
      revenue_amount = #{revenueAmount}
    </if>
    where user_id = #{userId}
  </update>
</mapper>