<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hiveview.dao.StockDataM5MapperDao" >

  <resultMap id="BaseResultMap" type="com.hiveview.entity.StockData" >
    <id column="id" property="id"  />
    <result column="product_id" property="productId"  />
    <result column="price" property="price"  />
    <result column="change_quantity" property="changeQuantity"  />
    <result column="buy_price" property="buyPrice"  />
    <result column="buy_amount" property="buyAmount"  />
    <result column="sell_price" property="sellPrice"  />
    <result column="sell_amount" property="sellAmount" />
    <result column="trade_amount" property="tradeAmount"  />
    <result column="opening_price" property="openingPrice"  />
    <result column="last_closing_price" property="lastClosingPrice"  />
    <result column="max_price" property="maxPrice"  />
    <result column="min_price" property="minPrice" />
    <result column="hold_amount" property="holdAmount"/>
    <result column="increase_amount" property="increaseAmount"  />
    <result column="data_time" property="dataTime"  />
    <result column="add_time" property="addTime"  />
  </resultMap>

  <sql id="Base_Column_List" >
    id, product_id, price, change_quantity, buy_price, buy_amount, sell_price, sell_amount, 
    trade_amount, opening_price, last_closing_price, max_price, min_price, hold_amount, 
    increase_amount, data_time, add_time
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from j_stock_datas_m5
    where id = #{id}
  </select>

  <delete id="deleteByPrimaryKey"  >
    delete from j_stock_datas_m5
    where id = #{id}
  </delete>

  <!--<insert id="insert" parameterType="com.hiveview.entity.StockData" >
    insert into j_stock_datas_m5 (id, product_id, price, 
      change_quantity, buy_price, buy_amount, 
      sell_price, sell_amount, trade_amount, 
      opening_price, last_closing_price, max_price, 
      min_price, hold_amount, increase_amount, 
      data_time, add_time)
    values (#{id,jdbcType=int}, #{productId,jdbcType=int}, #{price,jdbcType=DECIMAL}, 
      #{changeQuantity,jdbcType=int}, #{buyPrice,jdbcType=DECIMAL}, #{buyAmount,jdbcType=int}, 
      #{sellPrice,jdbcType=int}, #{sellAmount,jdbcType=int}, #{tradeAmount,jdbcType=int}, 
      #{openingPrice,jdbcType=DECIMAL}, #{lastClosingPrice,jdbcType=DECIMAL}, #{maxPrice,jdbcType=DECIMAL}, 
      #{minPrice,jdbcType=DECIMAL}, #{holdAmount,jdbcType=int}, #{increaseAmount,jdbcType=int}, 
      #{dataTime,jdbcType=TIMESTAMP}, #{addTime,jdbcType=TIMESTAMP})
  </insert>-->

  <select id="selectTwoHour" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from j_stock_datas_m5
    where 1=1
    <![CDATA[
    and data_time <= now()
    and data_time >= date_sub(now(), interval 1 hour)]]>
    ORDER BY data_time ASC
  </select>

  <select id="selectOneFreshData" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from j_stock_datas_m5
    where 1=1
    ORDER BY data_time DESC limit 1
  </select>

 <!-- <update id="updateByPrimaryKey" parameterType="com.hiveview.entity.StockData" >
    update j_stock_datas_m5
    set product_id = #{productId,jdbcType=int},
      price = #{price,jdbcType=DECIMAL},
      change_quantity = #{changeQuantity,jdbcType=int},
      buy_price = #{buyPrice,jdbcType=DECIMAL},
      buy_amount = #{buyAmount,jdbcType=int},
      sell_price = #{sellPrice,jdbcType=int},
      sell_amount = #{sellAmount,jdbcType=int},
      trade_amount = #{tradeAmount,jdbcType=int},
      opening_price = #{openingPrice,jdbcType=DECIMAL},
      last_closing_price = #{lastClosingPrice,jdbcType=DECIMAL},
      max_price = #{maxPrice,jdbcType=DECIMAL},
      min_price = #{minPrice,jdbcType=DECIMAL},
      hold_amount = #{holdAmount,jdbcType=int},
      increase_amount = #{increaseAmount,jdbcType=int},
      data_time = #{dataTime,jdbcType=TIMESTAMP},
      add_time = #{addTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=int}
  </update>-->
</mapper>